<%- include('../partials/adminHeader') %>

<main class="container_content">

        <!---------------- Sorting orders ---------------->
<section class="flex flex-col justify-end items-end">
  
  <div class="relative">
    <button id="dropdownDefaultButton" data-dropdown-toggle="dropdown" class="mt-12 text-gray-950 h-9 w-44 border border-gray-950 bg-gray-500  focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium text-sm px-5 py-2.5 inline-flex dark:bg-gray-50 dark:hover:bg-gray-700 dark:hover:text-white dark:focus:ring-blue-800 justify-center" type="button" onclick="toggleDropdown()">
      <span class="flex items-center font-thin">Select By</span>
      <svg class="w-2.5 h-2.5 mt-2 ml-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 4 4 4-4"/></svg>
    </button>
    <div id="dropdown" class="absolute right-0 z-10 hidden bg-white divide-y divide-gray-100 shadow w-44 dark:bg-gray-100 text-gray-950">
      <ul class="py-2 text-sm text-gray-700 dark:text-gray-200" aria-labelledby="dropdownDefaultButton">
        <li>
          <a href="/admin/sortSalesReport/daily" class="block px-4 py-2 text-gray-950 font-thin hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Daily</a>
        </li>
        <li>
          <a href="/admin/sortSalesReport/monthly" class="block px-4 py-2 text-gray-950 font-thin hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white" >Monthly</a>
        </li>
        <li>
          <a href="/admin/sortSalesReport/yearly" class="block px-4 py-2 text-gray-950 font-thin hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white" >Yearly</a>
        </li>
        <li>
          <a id="openModal" class="block px-4 py-2 text-gray-950 font-thin hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white" >Custom</a>
        </li>
      </ul>
    </div>
  </div>
</section>


<div class="flex gap-3 mb-3">
  <div data-dialog-backdrop="dialog-xs" data-dialog-backdrop-close="true" class="pointer-events-none fixed inset-0 z-[999] grid h-screen w-screen place-items-center bg-black bg-opacity-60 opacity-0 backdrop-blur-sm transition-opacity duration-300">
      <div data-dialog="dialog-xs" class="relative m-4 w-1/4 min-w-[25%] max-w-[25%] rounded-lg bg-white font-sans text-base font-light leading-relaxed text-blue-gray-500 antialiased shadow-2xl">
        <div class="relative p-4 font-sans text-base antialiased font-light leading-relaxed border-t border-b border-t-blue-gray-100 border-b-blue-gray-100 text-blue-gray-500">
            <span>Starting Date</span>
            <input id="startingDate" type="date"/>
          </div>
          <div class="relative p-4 font-sans text-base antialiased font-light leading-relaxed border-t border-b border-t-blue-gray-100 border-b-blue-gray-100 text-blue-gray-500">
            <span>Ending Date</span>
            <input id="endingDate" type="date"/>
          </div>
          <div class="flex flex-wrap items-center justify-end p-4 shrink-0 text-blue-gray-500">
              <button onclick="closeModal()" data-ripple-dark="true" data-dialog-close="true" class="px-6 py-3 mr-1 font-sans text-xs font-bold text-red-500 uppercase transition-all rounded-lg middle none center hover:bg-red-500/10 active:bg-red-500/30 disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none">
                  Cancel
              </button>
              <button onclick="customSales()" data-ripple-light="true" data-dialog-close="true" class="middle none center rounded-lg bg-gradient-to-tr from-green-600 to-green-400 py-3 px-6 font-sans text-xs font-bold uppercase text-white shadow-md shadow-green-500/20 transition-all hover:shadow-lg hover:shadow-green-500/40 active:opacity-[0.85] disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none">
                  Confirm
              </button>
          </div>
      </div>
  </div>
</div>


  <section>
    <div class="w-full mt-5" id="mail">
      <div class="text-center pb-5">
        <span class="text-3xl text-gray-950 font-extrabold">Sales Report</span>
      </div>   
       <table class="items-center bg-transparent w-full border-gray-400 border ">
        <thead>
          <tr>
           <th class="bg-stone-700 text-white align-middle border-t border-gray-500 py-3 text-xs uppercase whitespace-nowrap font-semibold text-left">
                          Si No</th>
           <th class="bg-stone-700 text-white align-middle border-t border-gray-500 py-3 text-xs uppercase whitespace-nowrap font-semibold text-left">
                          Product Name</th>
           <th class="bg-stone-700 text-white align-middle border-t border-gray-500 py-3 text-xs uppercase whitespace-nowrap font-semibold text-left">
                          Product Price</th>
           <th class="bg-stone-700 text-white align-middle border-t border-gray-500 py-3 text-xs uppercase whitespace-nowrap font-semibold text-left">
                            Product Offer</th>
           <th class="bg-stone-700 text-white align-middle border-t border-gray-500 py-3 text-xs uppercase whitespace-nowrap font-semibold text-left">
                            Total Item Sold</th>
           <th class="bg-stone-700 text-white align-middle border-t border-gray-500 py-3 text-xs uppercase whitespace-nowrap font-semibold text-left">
                          Total Sale</th>
           </tr>
         </thead>
         <tbody>
          <% let total =0; %>
          <% let totalOffer =0; %>
          <% orders.forEach((order ,index ) => { %>
          <tr>
          <td class="border border-gray-400 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 ">
         <%= index + 1 %>
          </td>
          <td class="border border-gray-400 px-6 align-center border-l-0 border-r-0 text-xs whitespace-nowrap p-4">
          <%= order.productName %>
          </td>
          <% if(order.offer[0]){ %>
          <td class="border border-gray-400 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4">
          <i class=" text-emerald-500 mr-4"></i>
          <%= order.offer[0].originalPrice %>
          </td>
          <% }else{ %>
            <td class="border border-gray-400 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4">
              <i class=" text-emerald-500 mr-4"></i>
              <%= order.price %>
              </td>
              <% } %>
          <% if(order.offer[0]){ %>
          <td class="border border-gray-400 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4">
          <%= order.price %>
          </td>
          <% }else{ %>
            <td class="border border-gray-400 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4">
              <i class=" text-emerald-500 mr-4"></i>
             null
              </td>
              <% } %>
          <td class="border border-gray-400 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4">
          <i class=" text-emerald-500 mr-4"></i>
          <%= order.count %>
          </td>
          <td class="border border-gray-400 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4">
          <i class=" text-emerald-500 mr-4"></i>
          <%= order.count * order.price %>
          </td>
          </tr>
          <% const count = parseInt(order.count), price = parseFloat(order.price); if (!isNaN(count) && !isNaN(price)) {  total += count * price;  } %>
          <% }) %>
          </tbody>
      </table>
      
      <div class="flex flex-col text-end pr-5 pt-6">
        <span class="text-gray-950 font-thin ">Total Offer : <%= totalOffer %>₹</span>
        <span class="text-gray-950 font-thin ">Sales Tax : 00.00</span>
        <div class="text-end flex flex-row justify-end"> 
       <span class="border border-gray-400 w-1/6 "></span>
        </div>
        <span class="text-gray-950 font-thin">Sales Total : <%= total %>₹</span>
      </div>
    </div>

<!----------------- downloading pdf & excel -------------------->
<div class="mb-12">
  <button onclick="exportToPDF()" class="mb-6 mt-8 text-white bg-red-700 hover:bg-blue-800  focus:ring-blue-300 font-thin text-sm sm:w-auto px-3 py-1 text-center">Download PDF</button>
  <button onclick="exportToExcel()" class="mb-6 mt-8 text-white bg-blue-700 hover:bg-red-800  focus:ring-blue-300 font-thin text-sm sm:w-auto px-3 py-1 text-center">Download Exel</button>
</div>
</section>


</main>

    <!---------------- sort dropdown ------------------->
    <script>
      function toggleDropdown() {
          var dropdown = document.getElementById('dropdown');
          dropdown.classList.toggle('hidden');
        };

        document.addEventListener("DOMContentLoaded", function () {
    const openModalButton = document.getElementById("openModal");
    const modal = document.querySelector("[data-dialog-backdrop]");
    const cancelButton = modal.querySelector("[data-dialog-close]");

    openModalButton.addEventListener("click", function () {
        modal.classList.add("opacity-100");
        modal.classList.add("pointer-events-auto");
    });

    cancelButton.addEventListener("click", function () {
        modal.classList.remove("opacity-100");
        modal.classList.remove("pointer-events-auto");
    });
});

   const customSales = () => {
    const startingDate = document.getElementById('startingDate').value;
    const endingDate = document.getElementById('endingDate').value;

    fetch('/admin/customSales', {
          method: "POST",
          headers: {
              "Content-Type": "application/json"
          },
          body: JSON.stringify({
              startingDate: startingDate,
              endingDate: endingDate
                })})
      .then(response => response.json()) 
          .then(data => {
              const orders = data.orders;
              window.location.href = '/admin/salesReport'
          })
          .catch(error => {
              console.error('Error:', error);
      });
    }

    const total = document.getElementById('total').value;
    const tota = document.getElementById('total')
tota.addEventListener('click',() => {
  alert(total)
})
  
  </script>

<script>
  //<------------------- pdf exporting -------------------->
  function exportToPDF() {
  const element = document.getElementById('mail');
  const opt = {
    margin: [20, 30, 0, 30],
    filename: 'sales_report.pdf',
    image: { type: 'jpeg', quality: 1.0 }, 
    html2canvas: { scale: 2 },
    jsPDF: { unit: 'mm', format: 'a4', orientation: 'Landscape' },
  };

  html2pdf().from(element).set(opt).save();
}


  //<------------------- excel exporting -------------------->
  function exportToExcel() {
    let data = document.getElementById('mail');
    var fp = XLSX.utils.table_to_book(data, { sheet: 'SalesReport' });
    XLSX.write(fp, {
      bookType: 'xlsx',
      type: 'base64'
    });
    XLSX.writeFile(fp, 'test.xlsx');
    }
</script>
<%- include('../partials/adminFooter') %>