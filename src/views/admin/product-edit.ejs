<%- include('../partials/adminHeader') %>

<main> 
    <form method="POST" enctype="multipart/form-data" action="/admin/product-edit/<%= products[0]._id %>?returnUrl=<%= encodeURIComponent(originalUrl) %>">
        <div class="space-y-12 p-20 flex">
          <div class="border-b border-gray-900/10 pb-12">
            <div class="mt-10 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6">
              <div class="sm:col-span-3">
                <label for="prodcutName" class="block text-sm font-medium leading-6 text-gray-900">Product Name</label>
                <div class="mt-2">
                  <input value="<%= products[0].productName %>"  type="text" name="productName" id="prodcutName" autocomplete="given-name" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
                </div>
              </div>

              <div class="sm:col-span-3">
                <div class="mt-2">
                    <label for="productImage" class="block text-sm font-medium leading-6 text-gray-900">Product Image</label>
                    <div class="mt-2">
                        <input type="file" name="productImage" id="productImage" accept="image/*" multiple class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
                        <div id="imagePreview" class="mt-2">
                            <% if (products[0].productImage) { %>
                                <% products[0].productImage.forEach(img => { %>
                                    <div class="existing-image">
                                        <img src="/product_images/<%= img %>" alt="Existing Image" class="w-20 h-20 object-cover rounded-md mr-2 mb-2">
                                        <button class="remove-existing-image text-red-500 hover:text-red-700 cursor-pointer ml-2" onclick="removeExistingImage('<%= img %>')">Remove</button>
                                      </div>
                                <% }) %>
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>
            
            
      
              <div class="sm:col-span-3">
                <label for="category" class="block text-sm font-medium leading-6 text-gray-900">Category</label>
                <div class="mt-2">
                  <select id="category" name="category" autocomplete="category-name" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:max-w-xs sm:text-sm sm:leading-6">
                    <option class="text-gray-900" ><%= products[0].category %></option>
                    <% products[1].forEach(category => { %>
                    <option class="text-gray-900" ><%= category.categoryName %></option>
                    <% }) %>
                  </select>
                </div>
              </div>
      
              <div class="sm:col-span-4">
                <label for="description" class="block text-sm font-medium leading-6 text-gray-900">Description</label>
                <div class="mt-2">
                  <input value="<%= products[0].description %>"  id="description" name="description" type="text" autocomplete="description" class="block w-full border-0 py-16 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
                </div>
              </div>

              <div class="sm:col-span-4">
                <label for="brand" class="block text-sm font-medium leading-6 text-gray-900">Brand</label>
                <div class="mt-2">
                  <input value="<%= products[0].brand %>"  id="brand" name="brand" type="text" autocomplete="description" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
                </div>
              </div>

              <div class="sm:col-span-4">
                <label for="color" class="block text-sm font-medium leading-6 text-gray-900">Color</label>
                <div class="mt-2">
                  <input value="<%= products[0].color %>"  id="color" name="color" type="text" autocomplete="color" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
                </div>
              </div>

              <div class="sm:col-span-4">
                <label for="price" class="block text-sm font-medium leading-6 text-gray-900">Price</label>
                <div class="mt-2">
                  <input value="<%= products[0].price %>"  id="price" name="price" type="number" autocomplete="price" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
                </div>
              </div>

              <div class="sm:col-span-4">
                <label for="size" class="block text-sm font-medium leading-6 text-gray-900">Size</label>
                <div class="mt-2">
                  <input value="<%= products[0].size %>"  id="size" name="size" type="number" autocomplete="size" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
                </div>
              </div>

              <div class="sm:col-span-4">
                <label for="stock" class="block text-sm font-medium leading-6 text-gray-900">Stock</label>
                <div class="mt-2">
                  <input value="<%= products[0].stock %>"  id="stock" name="stock" type="number" autocomplete="stock" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
                </div>
              </div>

              <div class="sm:col-span-4">
                <label for="extras" class="block text-sm font-medium leading-6 text-gray-900">Extras</label>
                <select id="extras" name="extras" autocomplete="extras-name" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:max-w-xs sm:text-sm sm:leading-6">
                  <option class="text-gray-900" ><%= products[0].extras %></option>
                  <option class="text-gray-900" >New Arrivals</option>
                  <option class="text-gray-900" >Trending</option>
                  <option class="text-gray-900" >Best Seller</option>
               </select>
          </div>
        <button type="submit" class="mt-5 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-yellow-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
            Update 
        </button>
        </div>
        </div>
      </form>
  </main>

<script src="https://unpkg.com/@popperjs/core@2"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

 
  <script>
document.addEventListener('DOMContentLoaded', function () {
  const productImageInput = document.getElementById('productImage');
  const previewContainer = document.getElementById('imagePreview');

  productImageInput.addEventListener('change', function (event) {
    const files = event.target.files;

    if (files && files.length > 0) {
      Array.from(files).forEach((file) => {
        const reader = new FileReader();

        reader.onload = function (e) {
          const wrapper = document.createElement('div');
          wrapper.classList.add('new-image', 'inline-block', 'relative', 'mr-2', 'mb-2');

          const image = document.createElement('img');
          image.src = e.target.result;
          image.classList.add('w-20', 'h-20', 'object-cover', 'rounded-md');

          const removeButton = document.createElement('button');
          removeButton.textContent = 'Remove';
          removeButton.classList.add('absolute', 'top-0', 'right-0', 'bg-red-500', 'text-white', 'text-xs', 'rounded', 'px-1');
          removeButton.addEventListener('click', function () {
            wrapper.remove(); // remove the whole preview wrapper
          });

          wrapper.appendChild(image);
          wrapper.appendChild(removeButton);
          previewContainer.appendChild(wrapper);
        };

        reader.readAsDataURL(file);
      });
    }
  });
});
</script>
 
  
  <script>
 
// Display existing images
window.onload = function() {
    const existingImages = "<%- JSON.stringify(products[0].productImage) %>";
    if (existingImages) {
        const previewContainer = document.getElementById('imagePreview');
        const images = JSON.parse(existingImages);
        images.forEach(function(imageSrc) {
            const existingImageContainer = document.createElement('div');
            existingImageContainer.classList.add('existing-image');

            const image = document.createElement('img');
            image.src = '/product_images/' + imageSrc;
            image.alt = 'Existing Image';
            image.classList.add('w-20', 'h-20', 'object-cover', 'rounded-md', 'mr-2', 'mb-2');

            const removeButton = document.createElement('button');
            removeButton.innerHTML = 'Remove';
            removeButton.classList.add('text-red-500', 'hover:text-red-700', 'cursor-pointer', 'ml-2');
            removeButton.addEventListener('click', function() {
                previewContainer.removeChild(existingImageContainer);
            });

            existingImageContainer.appendChild(image);
            existingImageContainer.appendChild(removeButton);
            previewContainer.appendChild(existingImageContainer);
        });
    }


};


  </script>

  <script>

    
function removeExistingImage(imageFilename) {
        // Find the image element with the corresponding filename
        const imageToRemove = document.querySelector(`img[src$="${imageFilename}"]`);
        
        // Remove the image element if found
        if (imageToRemove) {
            imageToRemove.parentNode.remove(); // Remove the parent element containing both the image and the button
        }
    }
    </script>



<script>
  function parseQueryParams() {
      var queryParams = {};
      var queryString = window.location.search.substring(1);
      var params = queryString.split("&");
      for (var i = 0; i < params.length; i++) {
          var pair = params[i].split("=");
          queryParams[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);
      }
      return queryParams;
  }

  document.addEventListener('DOMContentLoaded', function() {
      var queryParams = parseQueryParams();
      var message = queryParams['message'];
      var type = queryParams['type'];
      if (message) {
          if (type === 'success') {
              toastr.success(message);
          } else if (type === 'error') {
              toastr.error(message);
          }
      }
  });
</script>
<script>
  function toggleDropdown() {
      var dropdown = document.getElementById('dropdown');
      dropdown.classList.toggle('hidden');
    }
</script>

  
<%- include('../partials/adminFooter') %>