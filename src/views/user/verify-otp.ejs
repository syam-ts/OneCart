<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="preconnect" href="https://fonts.bunny.net">
    <link href="https://fonts.bunny.net/css?family=figtree:400,500,600&display=swap" rel="stylesheet" />
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <link href="https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/remixicon.css" rel="stylesheet">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Michroma&display=swap">
        <!------------- toastr -------------->
        <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" rel="stylesheet">
          <!----------- toaster css ------------->
  <style>
    #toast-container > .toast-error {
      background: linear-gradient(to right, #e92d0ce3, #22242F 50% ) !important;
      width: 350px;
      height: 70px;
      position: relative;
      color: white; 
      text-align: center;
      font-family: Verdana, Geneva, Tahoma, sans-serif;
    }
    
    #toast-container > .toast-error::after {
      content: ""; 
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 4px; 
      background-color: rgb(255, 0, 0); 
      transform: scaleX(0); 
      transform-origin: right; 
      animation: expandLine 5s linear forwards; 
    }
  
    @keyframes expandLine {
      to {
        transform: scaleX(1); 
      }
    }
  </style>
  <style>
    #toast-container > .toast-success {
      background: linear-gradient(to right, #15ff00, #4c4e5b 50% ) !important;
      width: 350px;
      height: 70px;
      position: relative;
      color: white; 
      text-align: center;
      font-family: Verdana, Geneva, Tahoma, sans-serif;
    }
    
    #toast-container > .toast-success::after {
      content: ""; 
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 4px; 
      background-color: rgb(0, 255, 55); 
      transform: scaleX(0); 
      transform-origin: right; 
      animation: expandLine 5s linear forwards; 
    }
  
    @keyframes expandLine {
      to {
        transform: scaleX(1); 
      }
    }
  </style>
    <script src="https://cdn.tailwindcss.com"></script>
    <title>otp Verification</title>
</head>
<body>
    <main>
    <div class="max-w-md mx-auto border mt-52 rounded">
        <form class="shadow-md px-4 py-6" action="/verify-otp" method="post">
            <div class="flex-row gap-2 mb-6">
                <input id="otp" name="otp" class="w-56 h-10 m-2 text-center border border-gray-400 shadow-sm focus:border-teal-500 focus:ring-teal-500" type="text" required>
                <span>OTP</span>
            </div>
            <!------------ otp timer ---------->
            <div id="otp-timer" class="text-center text-gray-600 mb-4"></div>
            <div class="flex items-center justify-center">
                <button type="submit" class="bg-teal-500 hover:bg-teal-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline" type="button">
                    Verify
                </button>
                <a id="resendOTP" class="inline-block align-baseline font-bold text-sm text-teal-500 hover:text-teal-800 ml-4" href="#">Resend OTP</a>
            </div>
        </form>
    </div>
    
</body>
</main>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
 <!--------------- toastr config ---------------->
<script>
    function parseQueryParams() {
        var queryParams = {};
        var queryString = window.location.search.substring(1);
        var params = queryString.split("&");
        for (var i = 0; i < params.length; i++) {
            var pair = params[i].split("=");
            queryParams[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);
        }
        return queryParams;
    }
  
    document.addEventListener('DOMContentLoaded', function() {
        var queryParams = parseQueryParams();
        var message = queryParams['message'];
        var type = queryParams['type'];
        if (message) {
            if (type === 'success') {
                toastr.success(message);
            } else if (type === 'error') {
                toastr.error(message);
            }
        }
    });
    </script>


    <script>
        
const otpTimerDuration = 60;
let otpTimer = otpTimerDuration;

// Function to update the OTP timer display
function updateOTPTimer() {
    const timerDisplay = document.getElementById('otp-timer');
    timerDisplay.textContent = `Resend OTP in ${otpTimer} seconds`;
    otpTimer--;

    // If timer reaches 0, enable the Verify button and reset the timer
    if (otpTimer < 0) {
        clearInterval(timerInterval);
        timerDisplay.textContent = '';
        document.getElementById('verify-btn').disabled = false;
        otpTimer = otpTimerDuration;
    }
}

// Start the OTP timer countdown
const timerInterval = setInterval(updateOTPTimer, 1000);
</script>
<script>
    document.getElementById('resendOTP').addEventListener('click', function(event) {
        event.preventDefault();
        
        fetch('/resend-otp', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
        })
        .then(response => {
          window.location.href = '/verify-otp?message=OTP send successfully&type=success'
        })
        .catch(error => {
            console.error('Error:', error);
            alert('An error occurred');
        });
    });
     </script>

</html>